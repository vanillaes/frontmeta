function e(e=""){const a={};let r="",t=[],s="",c=0,n=0,b=!1,k=!1,o=!1,i="",h="";const l=RegExp(/-|:|\r\n|\n|\r|\s|[^:\s\r\n]+/y);for(;null!==(t=l.exec(e));){switch(s=t[0],c){case 0:switch(!0){case"-"===s:n++,c=1;break;case/^(\s)$/.test(s):c=0;break;default:b=!0}break;case 1:switch(!0){case"-"===s:n++,c=1;break;case/^(\r\n|\n|\r)$/.test(s):if(n<3)throw Error("ERR: Meta boundary must have at least 3 dashes");k?(o=!0,c=5):(k=!0,c=2),n=0}break;case 2:switch(!0){case":"===s:c=3;break;case/^(\s)$/.test(s):c=2;break;case/^(\r\n|\n|\r)$/.test(s):throw Error("ERR: Broken key:value pair");default:i+=s,c=2}break;case 3:switch(!0){case""===h&&/^(\s)$/.test(s):c=3;break;case/^(\r\n|\n|\r)$/.test(s):c=1,a[i]=h.trimRight(),i="",h="";break;default:c=3,h+=s}}if(b){r=e;break}if(o){r=e.substr(l.lastIndex,e.length-1);break}}return{meta:a,body:r}}var a={parse:e};export default a;export{e as parse};
