function e(e=""){const t={};let r="",a=[],s="",n=0,c=0,b=!1,o=!1,i=!1,k="",u="";const f=/-|:|\r\n|\n|\r|\s|[^:\s\r\n]+/y;for(;null!==(a=f.exec(e));){switch(s=a[0],n){case 0:switch(!0){case"-"===s:c++,n=1;break;case/^(\s)$/.test(s):n=0;break;default:b=!0}break;case 1:switch(!0){case"-"===s:c++,n=1;break;case/^(\r\n|\n|\r)$/.test(s):if(c<3)throw Error("ERR: Meta boundary must have at least 3 dashes");o?(i=!0,n=5):(o=!0,n=2),c=0}break;case 2:switch(!0){case":"===s:n=3;break;case/^(\s)$/.test(s):n=2;break;case/^(\r\n|\n|\r)$/.test(s):throw Error("ERR: Broken key:value pair");default:k+=s,n=2}break;case 3:switch(!0){case""===u&&/^(\s)$/.test(s):n=3;break;case/^(\r\n|\n|\r)$/.test(s):n=1,t[k]=u.trimRight(),k="",u="";break;default:n=3,u+=s}}if(b){r=e;break}if(i){r=e.substr(f.lastIndex,e.length-1);break}}return{meta:t,body:r}}function t(e){if(!e.meta||0===Object.keys(e.meta).length)return e.body;let t="---\n";return Object.keys(e.meta).forEach(r=>{t+=`${r}: ${e.meta[r]}\n`}),t+="---\n",e.body&&(t+=e.body),t}var r={parse:e,stringify:t};export default r;export{e as parse,t as stringify};
